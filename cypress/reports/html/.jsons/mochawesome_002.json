{
  "stats": {
    "suites": 3,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2023-08-25T07:49:18.223Z",
    "end": "2023-08-25T07:49:26.475Z",
    "duration": 8252,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "611b4c16-3e0b-417e-9785-081ab47a8d3d",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\assertions.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\assertions.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "767d9c29-f6d8-44f9-8ef6-f3388cb6e881",
          "title": "Assertions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7baf072c-b1c0-4043-abd7-56c52e5a0f93",
              "title": "Implicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".should() - make an assertion about the current subject",
                  "fullTitle": "Assertions Implicit Assertions .should() - make an assertion about the current subject",
                  "timedOut": null,
                  "duration": 582,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress\\\\e2e\\\\2-advanced-examples\\\\assertions.cy.js\"\n}",
                  "code": "cy.get(\".assertion-table\").find(\"tbody tr:last\").should(\"have.class\", \"success\").find(\"td\").first().should(\"have.text\", \"Column content\").should(\"contain\", \"Column content\").should(\"have.html\", \"Column content\").should(\"match\", \"td\").invoke(\"text\").should(\"match\", /column content/i);\ncy.get(\".assertion-table\").find(\"tbody tr:last\").contains(\"td\", /column content/i).should(\"be.visible\");",
                  "err": {},
                  "uuid": "d6f7b13c-e1dd-4633-8dcb-f5bca06ba3cd",
                  "parentUUID": "7baf072c-b1c0-4043-abd7-56c52e5a0f93",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": ".and() - chain multiple assertions together",
                  "fullTitle": "Assertions Implicit Assertions .and() - chain multiple assertions together",
                  "timedOut": null,
                  "duration": 333,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress\\\\e2e\\\\2-advanced-examples\\\\assertions.cy.js\"\n}",
                  "code": "cy.get(\".assertions-link\").should(\"have.class\", \"active\").and(\"have.attr\", \"href\").and(\"include\", \"cypress.io\");",
                  "err": {},
                  "uuid": "1eb1957e-b4a5-4659-8469-2cbc430db5cd",
                  "parentUUID": "7baf072c-b1c0-4043-abd7-56c52e5a0f93",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d6f7b13c-e1dd-4633-8dcb-f5bca06ba3cd",
                "1eb1957e-b4a5-4659-8469-2cbc430db5cd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 915,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5911ffda-6291-4cb3-a36d-41efb860d717",
              "title": "Explicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "expect - make an assertion about a specified subject",
                  "fullTitle": "Assertions Explicit Assertions expect - make an assertion about a specified subject",
                  "timedOut": null,
                  "duration": 379,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress\\\\e2e\\\\2-advanced-examples\\\\assertions.cy.js\"\n}",
                  "code": "expect(true).to.be.true;\nconst o = { foo: \"bar\" };\nexpect(o).to.equal(o);\nexpect(o).to.deep.equal({ foo: \"bar\" });\nexpect(\"FooBar\").to.match(/bar$/i);",
                  "err": {},
                  "uuid": "c60ea571-f55d-4943-80ed-9de511ccb151",
                  "parentUUID": "5911ffda-6291-4cb3-a36d-41efb860d717",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pass your own callback function to should()",
                  "fullTitle": "Assertions Explicit Assertions pass your own callback function to should()",
                  "timedOut": null,
                  "duration": 302,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress\\\\e2e\\\\2-advanced-examples\\\\assertions.cy.js\"\n}",
                  "code": "cy.get(\".assertions-p\").find(\"p\").should(($p) => {\n  const texts = $p.map((i, el) => Cypress.$(el).text());\n  const paragraphs = texts.get();\n  expect(paragraphs, \"has 3 paragraphs\").to.have.length(3);\n  expect(paragraphs, \"has expected text in each paragraph\").to.deep.eq([\n    \"Some text from first p\",\n    \"More text from second p\",\n    \"And even more text from third p\"\n  ]);\n});",
                  "err": {},
                  "uuid": "79c291af-314e-406b-bc54-349744af05ce",
                  "parentUUID": "5911ffda-6291-4cb3-a36d-41efb860d717",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "finds element by class name regex",
                  "fullTitle": "Assertions Explicit Assertions finds element by class name regex",
                  "timedOut": null,
                  "duration": 314,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress\\\\e2e\\\\2-advanced-examples\\\\assertions.cy.js\"\n}",
                  "code": "cy.get(\".docs-header\").find(\"div\").should(($div) => {\n  expect($div).to.have.length(1);\n  const className = $div[0].className;\n  expect(className).to.match(/heading-/);\n}).then(($div) => {\n  expect($div, \"text content\").to.have.text(\"Introduction\");\n});",
                  "err": {},
                  "uuid": "72f3e5c0-ee88-4665-9bed-c69c864aabd5",
                  "parentUUID": "5911ffda-6291-4cb3-a36d-41efb860d717",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can throw any error",
                  "fullTitle": "Assertions Explicit Assertions can throw any error",
                  "timedOut": null,
                  "duration": 297,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress\\\\e2e\\\\2-advanced-examples\\\\assertions.cy.js\"\n}",
                  "code": "cy.get(\".docs-header\").find(\"div\").should(($div) => {\n  if ($div.length !== 1) {\n    throw new Error(\"Did not find 1 element\");\n  }\n  const className = $div[0].className;\n  if (!className.match(/heading-/)) {\n    throw new Error(`Could not find class \"heading-\" in ${className}`);\n  }\n});",
                  "err": {},
                  "uuid": "db565b26-af47-4382-8502-8944ba47556f",
                  "parentUUID": "5911ffda-6291-4cb3-a36d-41efb860d717",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches unknown text between two elements",
                  "fullTitle": "Assertions Explicit Assertions matches unknown text between two elements",
                  "timedOut": null,
                  "duration": 323,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress\\\\e2e\\\\2-advanced-examples\\\\assertions.cy.js\"\n}",
                  "code": "let text;\nconst normalizeText = (s) => s.replace(/\\s/g, \"\").toLowerCase();\ncy.get(\".two-elements\").find(\".first\").then(($first) => {\n  text = normalizeText($first.text());\n});\ncy.get(\".two-elements\").find(\".second\").should(($div) => {\n  const secondText = normalizeText($div.text());\n  expect(secondText, \"second text\").to.equal(text);\n});",
                  "err": {},
                  "uuid": "4242e1e7-9e54-47af-a033-22e97a933f1f",
                  "parentUUID": "5911ffda-6291-4cb3-a36d-41efb860d717",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "assert - assert shape of an object",
                  "fullTitle": "Assertions Explicit Assertions assert - assert shape of an object",
                  "timedOut": null,
                  "duration": 437,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress\\\\e2e\\\\2-advanced-examples\\\\assertions.cy.js\"\n}",
                  "code": "const person = {\n  name: \"Joe\",\n  age: 20\n};\nassert.isObject(person, \"value is object\");",
                  "err": {},
                  "uuid": "78033783-6e6e-46e4-a177-b82130aa4bec",
                  "parentUUID": "5911ffda-6291-4cb3-a36d-41efb860d717",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "retries the should callback until assertions pass",
                  "fullTitle": "Assertions Explicit Assertions retries the should callback until assertions pass",
                  "timedOut": null,
                  "duration": 1752,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress\\\\e2e\\\\2-advanced-examples\\\\assertions.cy.js\"\n}",
                  "code": "cy.get(\"#random-number\").should(($div) => {\n  const n = parseFloat($div.text());\n  expect(n).to.be.gte(1).and.be.lte(10);\n});",
                  "err": {},
                  "uuid": "421612a1-fde9-4c84-8516-fac252b3d352",
                  "parentUUID": "5911ffda-6291-4cb3-a36d-41efb860d717",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c60ea571-f55d-4943-80ed-9de511ccb151",
                "79c291af-314e-406b-bc54-349744af05ce",
                "72f3e5c0-ee88-4665-9bed-c69c864aabd5",
                "db565b26-af47-4382-8502-8944ba47556f",
                "4242e1e7-9e54-47af-a033-22e97a933f1f",
                "78033783-6e6e-46e4-a177-b82130aa4bec",
                "421612a1-fde9-4c84-8516-fac252b3d352"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3804,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "reportPageTitle": "MyReports",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveAllAttempts": true,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}